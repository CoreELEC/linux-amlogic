/*
 * sound/soc/amlogic/auge/effects_hw_v2_coeff.h
 *
 * Copyright (C) 2018 Amlogic, Inc. All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 */

#define EQ_BAND                  20
#define FILTER_PARAM_SIZE        5
#define DC_CUT_FILTER_RAM_ADD    0
#define DC_CUT_FILTER_SIZE       FILTER_PARAM_SIZE
#define EQ_FILTER_RAM_ADD        (DC_CUT_FILTER_RAM_ADD + FILTER_PARAM_SIZE)
#define EQ_FILTER_SIZE_CH        (EQ_BAND*FILTER_PARAM_SIZE)
#define EQ_FILTER_SIZE           (2*EQ_FILTER_SIZE_CH)
#define CROSSOVER_FILTER_RAM_ADD (EQ_FILTER_RAM_ADD + EQ_FILTER_SIZE)
#define CROSSOVER_FILTER_SIZE    (4*FILTER_PARAM_SIZE)

#define FILTER_PARAM_BYTE        66 /*"0x%8.8x "*/

static unsigned int DC_CUT_COEFF[DC_CUT_FILTER_SIZE] = {
	0x7fd51b, 0x30055c9, 0x7fd51b, 0x30055e6, 0x7b1673
};

static unsigned int EQ_COEFF[EQ_FILTER_SIZE] = {
	/*Ch1 EQ 0~19*/
	/*0~9 band*/
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	/*10~19 band*/
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	/*Ch2 EQ 0~19*/
	/*0~9 band*/
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	/*10~19 band*/
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
	0x800000, 0x0, 0x0, 0x0, 0x0,
};

/*fiter1 fc: 120Hz; fiter2 fc: 4.5KHz*/
static unsigned int CROSSOVER_COEFF[CROSSOVER_FILTER_SIZE] = {
	/*low-pass filter1*/
	0x25b,	  0x4b5,	 0x25b,    0x3045701, 0x7bb269,
	/*high-pass filter1*/
	0x7dd6da, 0x304524c, 0x7dd6da, 0x3045701, 0x7bb269,
	/*low-pass filter2*/
	0x7f3ee,  0xfe7dc,	 0x7f3ee,  0x37f9f4a, 0x20306d,
	/*high-pass filter2*/
	0x482449, 0x36fb76e, 0x482449, 0x37f9f4a, 0x20306d,
};

#define AED_MULTIBAND_DRC_LENGTH 18
#define AED_FULLBAND_DRC_LENGTH  24

static int multiband_drc_coeff[] = {
	0x34ebb,   /* Low SMS coeff0 */
	0x7f54e0,  /* Low SMS coeff1 */
	0x5188,    /* Low RELEASE coeff0 */
	0x7fae78,  /* Low RELEASE coeff1 */
	0x3263a,   /* Low ATTACK coeff0 */
	0x7cd9c6,  /* Low ATTACK coeff1 */

	0x34ebb,   /* Mid */
	0x7f54e0,
	0x5188,
	0x7fae78,
	0x3263a,
	0x7cd9c6,

	0x34ebb,   /* High */
	0x7f54e0,
	0x5188,
	0x7fae78,
	0x3263a,
	0x7cd9c6,
};

static int fullband_drc_coeff[] = {
	0x5188,	    /* RELEASE_COEF00 */
	0x7fae78,	/* RELEASE_COEF01 */
	0x5188,
	0x7fae78,
	0x5188,
	0x7fae78,
	0x5188,
	0x7fae78,
	0x5188,
	0x7fae78,
	0x5188,	    /* RELEASE_COEF50 */
	0x7fae78,	/* RELEASE_COEF51 */
	0x3263a,	/* ATTACK_COEF00 */
	0x7cd9c6,	/* ATTACK_COEF01 */
	0x3263a,
	0x7cd9c6,
	0x3263a,
	0x7cd9c6,
	0x3263a,
	0x7cd9c6,
	0x3263a,
	0x7cd9c6,
	0x3263a,	/* ATTACK_COEF50 */
	0x7cd9c6,	/* ATTACK_COEF51 */
};

